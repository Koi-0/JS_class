// 상속(Inheritance)

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //

// Class는 상속을 통해 다른 Class의 기능을 물려받을 수 있다.
// 상속을 받는 Class를 subclass 또는 derived class라고 한다.
// 상속을 하는 Class를 superclass 또는 base class라고 한다.

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //

// 동물 전체에 대한 클래스
class Animal {
    constructor(name) {
        this.name = name;
    }

    speak() {
        console.log(`${this.name} say!`);
    }
}

// const Me = new Animal("young");
// Me.speak();

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //

// 동물 클래스를 상속받는 Dog 클래스
class Dog extends Animal {
    // constructor()와 speak()는 상속받을 때 기본적으로 들어가 있다.
    // speak()를 자유롭게 재정의할 수 있다.
    // overriding.. : 부모로부터 상속받은 후 재정의하는 것
    speak() {
        console.log(`${this.name} barks.`);
    }
}

// Dog를 만들 때, Animal의 상속을 받은 class이기 때문에 이름을 필수로 받아야 한다.
let dog = new Dog("Mitzie");

// speak는 'say!'가 아니라, 'barks.'으로 출력된다.
dog.speak(); // "Mitzie barks."

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
