const x = 1;

function outerFunc() {
    const x = 10;
    innerFunc(); // 출력값 : 1
}

function innerFunc() {
    console.log(x); // 출력값 : 1
}

outerFunc();

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //

// innerFunc()와 outerFunc()는 서로 다른 Scope를 가지고 있다.
// 즉, innerFunc()에서는 outerFunc()의 x에 접근할 수 없다.

// outerFunc() 내부에서 innerFunc()가 호출되고 있지만, 밖에서 선언했기 때문에 Scope를 공유하지 않는다.

// Lexical Scope
// JS 엔진은 함수를 어디서 호출했는지가 아니라, 어디에 정의했는지에 따라서 Scope(상위 Scope)를 결정한다.
// Lexical Scope를 따르는 프로그래밍 언어이기 때문이다.

// 외부 렉시컬 환경에 대한 참조값 => outer
// 함수가 정의되는 시점

// ------------------------------------------------------------------------------------------------------------------------------------------------------------------ //
